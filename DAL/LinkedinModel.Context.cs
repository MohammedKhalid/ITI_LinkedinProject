//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LinkedInEntities : DbContext
    {
        public LinkedInEntities()
            : base("name=LinkedInEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public virtual DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }
        public virtual DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }
        public virtual DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public virtual DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public virtual DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }
        public virtual DbSet<Certification> Certifications { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Education> Educations { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<Industry> Industries { get; set; }
        public virtual DbSet<Langauge> Langauges { get; set; }
        public virtual DbSet<Like> Likes { get; set; }
        public virtual DbSet<Link> Links { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<Member_Connection> Member_Connection { get; set; }
        public virtual DbSet<Member_Group> Member_Group { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<Organization_Follower> Organization_Follower { get; set; }
        public virtual DbSet<Organization_Size> Organization_Size { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<Upload_Media> Upload_Media { get; set; }
        public virtual DbSet<Volunteer_Experience> Volunteer_Experience { get; set; }
        public virtual DbSet<Work_Experience> Work_Experience { get; set; }
    
        public virtual ObjectResult<string> aspnet_AnyDataInTables(Nullable<int> tablesToCheck)
        {
            var tablesToCheckParameter = tablesToCheck.HasValue ?
                new ObjectParameter("TablesToCheck", tablesToCheck) :
                new ObjectParameter("TablesToCheck", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_AnyDataInTables", tablesToCheckParameter);
        }
    
        public virtual int aspnet_Applications_CreateApplication(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_CheckSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Membership_ChangePasswordQuestionAndAnswer(string applicationName, string userName, string newPasswordQuestion, string newPasswordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordQuestionParameter = newPasswordQuestion != null ?
                new ObjectParameter("NewPasswordQuestion", newPasswordQuestion) :
                new ObjectParameter("NewPasswordQuestion", typeof(string));
    
            var newPasswordAnswerParameter = newPasswordAnswer != null ?
                new ObjectParameter("NewPasswordAnswer", newPasswordAnswer) :
                new ObjectParameter("NewPasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_CreateUser(string applicationName, string userName, string password, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, ObjectParameter userId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordQuestionParameter = passwordQuestion != null ?
                new ObjectParameter("PasswordQuestion", passwordQuestion) :
                new ObjectParameter("PasswordQuestion", typeof(string));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
        }
    
        public virtual int aspnet_Membership_FindUsersByEmail(string applicationName, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailToMatchParameter = emailToMatch != null ?
                new ObjectParameter("EmailToMatch", emailToMatch) :
                new ObjectParameter("EmailToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_FindUsersByName(string applicationName, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetAllUsers(string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetNumberOfUsersOnline(string applicationName, Nullable<int> minutesSinceLastInActive, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var minutesSinceLastInActiveParameter = minutesSinceLastInActive.HasValue ?
                new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive) :
                new ObjectParameter("MinutesSinceLastInActive", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(string applicationName, string userName, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(string applicationName, string userName, Nullable<bool> updateLastLoginActivityDate, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Membership_GetUserByEmail(string applicationName, string email)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<System.Guid> userId, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual int aspnet_Membership_ResetPassword(string applicationName, string userName, string newPassword, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_SetPassword(string applicationName, string userName, string newPassword, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
        }
    
        public virtual int aspnet_Membership_UnlockUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUser(string applicationName, string userName, string email, string comment, Nullable<bool> isApproved, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate, Nullable<int> uniqueEmail, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUserInfo(string applicationName, string userName, Nullable<bool> isPasswordCorrect, Nullable<bool> updateLastLoginActivityDate, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isPasswordCorrectParameter = isPasswordCorrect.HasValue ?
                new ObjectParameter("IsPasswordCorrect", isPasswordCorrect) :
                new ObjectParameter("IsPasswordCorrect", typeof(bool));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
        }
    
        public virtual int aspnet_Paths_CreatePath(Nullable<System.Guid> applicationId, string path, ObjectParameter pathId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Paths_CreatePath", applicationIdParameter, pathParameter, pathId);
        }
    
        public virtual int aspnet_Personalization_GetApplicationId(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Personalization_GetApplicationId", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_PersonalizationAdministration_DeleteAllState(Nullable<bool> allUsersScope, string applicationName, ObjectParameter count)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_DeleteAllState", allUsersScopeParameter, applicationNameParameter, count);
        }
    
        public virtual int aspnet_PersonalizationAdministration_FindState(Nullable<bool> allUsersScope, string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_FindState", allUsersScopeParameter, applicationNameParameter, pageIndexParameter, pageSizeParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_GetCountOfState(ObjectParameter count, Nullable<bool> allUsersScope, string applicationName, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_GetCountOfState", count, allUsersScopeParameter, applicationNameParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetSharedState(ObjectParameter count, string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetSharedState", count, applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetUserState(ObjectParameter count, string applicationName, Nullable<System.DateTime> inactiveSinceDate, string userName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetUserState", count, applicationNameParameter, inactiveSinceDateParameter, userNameParameter, pathParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationAllUsers_GetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationAllUsers_GetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_ResetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_ResetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_SetPageSettings(string applicationName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_SetPageSettings", applicationNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationPerUser_GetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationPerUser_GetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_ResetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_ResetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_SetPageSettings(string applicationName, string userName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_SetPageSettings", applicationNameParameter, userNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteProfiles(string applicationName, string userNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_GetNumberOfInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_Profile_GetProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<int> pageIndex, Nullable<int> pageSize, string userNameToMatch, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Profile_SetProperties(string applicationName, string propertyNames, string propertyValuesString, byte[] propertyValuesBinary, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var propertyNamesParameter = propertyNames != null ?
                new ObjectParameter("PropertyNames", propertyNames) :
                new ObjectParameter("PropertyNames", typeof(string));
    
            var propertyValuesStringParameter = propertyValuesString != null ?
                new ObjectParameter("PropertyValuesString", propertyValuesString) :
                new ObjectParameter("PropertyValuesString", typeof(string));
    
            var propertyValuesBinaryParameter = propertyValuesBinary != null ?
                new ObjectParameter("PropertyValuesBinary", propertyValuesBinary) :
                new ObjectParameter("PropertyValuesBinary", typeof(byte[]));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_RegisterSchemaVersion(string feature, string compatibleSchemaVersion, Nullable<bool> isCurrentVersion, Nullable<bool> removeIncompatibleSchema)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            var isCurrentVersionParameter = isCurrentVersion.HasValue ?
                new ObjectParameter("IsCurrentVersion", isCurrentVersion) :
                new ObjectParameter("IsCurrentVersion", typeof(bool));
    
            var removeIncompatibleSchemaParameter = removeIncompatibleSchema.HasValue ?
                new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema) :
                new ObjectParameter("RemoveIncompatibleSchema", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
        }
    
        public virtual int aspnet_Roles_CreateRole(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Roles_DeleteRole(string applicationName, string roleName, Nullable<bool> deleteOnlyIfRoleIsEmpty)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var deleteOnlyIfRoleIsEmptyParameter = deleteOnlyIfRoleIsEmpty.HasValue ?
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty) :
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Roles_GetAllRoles(string applicationName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Roles_GetAllRoles", applicationNameParameter);
        }
    
        public virtual int aspnet_Roles_RoleExists(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Setup_RemoveAllRoleMembers(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
        }
    
        public virtual int aspnet_Setup_RestorePermissions(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RestorePermissions", nameParameter);
        }
    
        public virtual int aspnet_UnRegisterSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Users_CreateUser(Nullable<System.Guid> applicationId, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> lastActivityDate, ObjectParameter userId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
        }
    
        public virtual int aspnet_Users_DeleteUser(string applicationName, string userName, Nullable<int> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tablesToDeleteFromParameter = tablesToDeleteFrom.HasValue ?
                new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom) :
                new ObjectParameter("TablesToDeleteFrom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_AddUsersToRoles(string applicationName, string userNames, string roleNames, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_FindUsersInRole(string applicationName, string roleName, string userNameToMatch)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetRolesForUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetUsersInRoles(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_UsersInRoles_IsUserInRole(string applicationName, string userName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(string applicationName, string userNames, string roleNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        public virtual int aspnet_WebEvent_LogEvent(string eventId, Nullable<System.DateTime> eventTimeUtc, Nullable<System.DateTime> eventTime, string eventType, Nullable<decimal> eventSequence, Nullable<decimal> eventOccurrence, Nullable<int> eventCode, Nullable<int> eventDetailCode, string message, string applicationPath, string applicationVirtualPath, string machineName, string requestUrl, string exceptionType, string details)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            var eventTimeUtcParameter = eventTimeUtc.HasValue ?
                new ObjectParameter("EventTimeUtc", eventTimeUtc) :
                new ObjectParameter("EventTimeUtc", typeof(System.DateTime));
    
            var eventTimeParameter = eventTime.HasValue ?
                new ObjectParameter("EventTime", eventTime) :
                new ObjectParameter("EventTime", typeof(System.DateTime));
    
            var eventTypeParameter = eventType != null ?
                new ObjectParameter("EventType", eventType) :
                new ObjectParameter("EventType", typeof(string));
    
            var eventSequenceParameter = eventSequence.HasValue ?
                new ObjectParameter("EventSequence", eventSequence) :
                new ObjectParameter("EventSequence", typeof(decimal));
    
            var eventOccurrenceParameter = eventOccurrence.HasValue ?
                new ObjectParameter("EventOccurrence", eventOccurrence) :
                new ObjectParameter("EventOccurrence", typeof(decimal));
    
            var eventCodeParameter = eventCode.HasValue ?
                new ObjectParameter("EventCode", eventCode) :
                new ObjectParameter("EventCode", typeof(int));
    
            var eventDetailCodeParameter = eventDetailCode.HasValue ?
                new ObjectParameter("EventDetailCode", eventDetailCode) :
                new ObjectParameter("EventDetailCode", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var applicationPathParameter = applicationPath != null ?
                new ObjectParameter("ApplicationPath", applicationPath) :
                new ObjectParameter("ApplicationPath", typeof(string));
    
            var applicationVirtualPathParameter = applicationVirtualPath != null ?
                new ObjectParameter("ApplicationVirtualPath", applicationVirtualPath) :
                new ObjectParameter("ApplicationVirtualPath", typeof(string));
    
            var machineNameParameter = machineName != null ?
                new ObjectParameter("MachineName", machineName) :
                new ObjectParameter("MachineName", typeof(string));
    
            var requestUrlParameter = requestUrl != null ?
                new ObjectParameter("RequestUrl", requestUrl) :
                new ObjectParameter("RequestUrl", typeof(string));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_WebEvent_LogEvent", eventIdParameter, eventTimeUtcParameter, eventTimeParameter, eventTypeParameter, eventSequenceParameter, eventOccurrenceParameter, eventCodeParameter, eventDetailCodeParameter, messageParameter, applicationPathParameter, applicationVirtualPathParameter, machineNameParameter, requestUrlParameter, exceptionTypeParameter, detailsParameter);
        }
    
        public virtual int Certification_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Certification_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Certification_GetAll_Result> Certification_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Certification_GetAll_Result>("Certification_GetAll");
        }
    
        public virtual ObjectResult<Certification_GetByID_Result> Certification_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Certification_GetByID_Result>("Certification_GetByID", iDParameter);
        }
    
        public virtual int Certification_Insert(string name, Nullable<int> fK_Org, Nullable<int> license_Number, Nullable<int> start_Year, Nullable<int> start_Month, Nullable<int> end_Year, Nullable<int> end_Month, string uRL, Nullable<System.Guid> fK_Member)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var license_NumberParameter = license_Number.HasValue ?
                new ObjectParameter("License_Number", license_Number) :
                new ObjectParameter("License_Number", typeof(int));
    
            var start_YearParameter = start_Year.HasValue ?
                new ObjectParameter("Start_Year", start_Year) :
                new ObjectParameter("Start_Year", typeof(int));
    
            var start_MonthParameter = start_Month.HasValue ?
                new ObjectParameter("Start_Month", start_Month) :
                new ObjectParameter("Start_Month", typeof(int));
    
            var end_YearParameter = end_Year.HasValue ?
                new ObjectParameter("End_Year", end_Year) :
                new ObjectParameter("End_Year", typeof(int));
    
            var end_MonthParameter = end_Month.HasValue ?
                new ObjectParameter("End_Month", end_Month) :
                new ObjectParameter("End_Month", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Certification_Insert", nameParameter, fK_OrgParameter, license_NumberParameter, start_YearParameter, start_MonthParameter, end_YearParameter, end_MonthParameter, uRLParameter, fK_MemberParameter);
        }
    
        public virtual int Certification_Update(Nullable<int> iD, string name, Nullable<int> fK_Org, Nullable<int> license_Number, Nullable<int> start_Year, Nullable<int> start_Month, Nullable<int> end_Year, Nullable<int> end_Month, string uRL, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var license_NumberParameter = license_Number.HasValue ?
                new ObjectParameter("License_Number", license_Number) :
                new ObjectParameter("License_Number", typeof(int));
    
            var start_YearParameter = start_Year.HasValue ?
                new ObjectParameter("Start_Year", start_Year) :
                new ObjectParameter("Start_Year", typeof(int));
    
            var start_MonthParameter = start_Month.HasValue ?
                new ObjectParameter("Start_Month", start_Month) :
                new ObjectParameter("Start_Month", typeof(int));
    
            var end_YearParameter = end_Year.HasValue ?
                new ObjectParameter("End_Year", end_Year) :
                new ObjectParameter("End_Year", typeof(int));
    
            var end_MonthParameter = end_Month.HasValue ?
                new ObjectParameter("End_Month", end_Month) :
                new ObjectParameter("End_Month", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Certification_Update", iDParameter, nameParameter, fK_OrgParameter, license_NumberParameter, start_YearParameter, start_MonthParameter, end_YearParameter, end_MonthParameter, uRLParameter, fK_MemberParameter);
        }
    
        public virtual int Comment_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Comment_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Comment_GetALL_Result> Comment_GetALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Comment_GetALL_Result>("Comment_GetALL");
        }
    
        public virtual ObjectResult<Comment_GetByID_Result> Comment_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Comment_GetByID_Result>("Comment_GetByID", iDParameter);
        }
    
        public virtual int Comment_Insert(string content, Nullable<int> fK_Post, Nullable<System.Guid> fK_MemberWrite)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var fK_PostParameter = fK_Post.HasValue ?
                new ObjectParameter("FK_Post", fK_Post) :
                new ObjectParameter("FK_Post", typeof(int));
    
            var fK_MemberWriteParameter = fK_MemberWrite.HasValue ?
                new ObjectParameter("FK_MemberWrite", fK_MemberWrite) :
                new ObjectParameter("FK_MemberWrite", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Comment_Insert", contentParameter, fK_PostParameter, fK_MemberWriteParameter);
        }
    
        public virtual int Comment_Update(Nullable<int> iD, string content, Nullable<int> fK_Post, Nullable<System.Guid> fK_MemberWrite)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var fK_PostParameter = fK_Post.HasValue ?
                new ObjectParameter("FK_Post", fK_Post) :
                new ObjectParameter("FK_Post", typeof(int));
    
            var fK_MemberWriteParameter = fK_MemberWrite.HasValue ?
                new ObjectParameter("FK_MemberWrite", fK_MemberWrite) :
                new ObjectParameter("FK_MemberWrite", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Comment_Update", iDParameter, contentParameter, fK_PostParameter, fK_MemberWriteParameter);
        }
    
        public virtual int Country_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Country_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Country_GetAll_Result> Country_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Country_GetAll_Result>("Country_GetAll");
        }
    
        public virtual ObjectResult<Country_GetByID_Result> Country_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Country_GetByID_Result>("Country_GetByID", iDParameter);
        }
    
        public virtual int Country_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Country_Insert", nameParameter);
        }
    
        public virtual int Country_Update(Nullable<int> iD, string name)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Country_Update", iDParameter, nameParameter);
        }
    
        public virtual int Course_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Course_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Course_GetAll_Result> Course_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Course_GetAll_Result>("Course_GetAll");
        }
    
        public virtual ObjectResult<Course_GetByID_Result> Course_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Course_GetByID_Result>("Course_GetByID", iDParameter);
        }
    
        public virtual int Course_Insert(string name, Nullable<int> number, Nullable<int> fK_Org, Nullable<System.Guid> fK_Member)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Course_Insert", nameParameter, numberParameter, fK_OrgParameter, fK_MemberParameter);
        }
    
        public virtual int Course_Update(Nullable<int> iD, string name, Nullable<int> number, Nullable<int> fK_Org, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Course_Update", iDParameter, nameParameter, numberParameter, fK_OrgParameter, fK_MemberParameter);
        }
    
        public virtual int Education_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Education_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Education_GetAll_Result> Education_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Education_GetAll_Result>("Education_GetAll");
        }
    
        public virtual ObjectResult<Education_GetByID_Result> Education_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Education_GetByID_Result>("Education_GetByID", iDParameter);
        }
    
        public virtual int Education_Insert(Nullable<int> fK_School, string degree, string fieldOfStudy, string grade, string activities, Nullable<int> from_Year, Nullable<int> to_Year, string description, Nullable<System.Guid> fK_Member)
        {
            var fK_SchoolParameter = fK_School.HasValue ?
                new ObjectParameter("FK_School", fK_School) :
                new ObjectParameter("FK_School", typeof(int));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var fieldOfStudyParameter = fieldOfStudy != null ?
                new ObjectParameter("FieldOfStudy", fieldOfStudy) :
                new ObjectParameter("FieldOfStudy", typeof(string));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            var activitiesParameter = activities != null ?
                new ObjectParameter("Activities", activities) :
                new ObjectParameter("Activities", typeof(string));
    
            var from_YearParameter = from_Year.HasValue ?
                new ObjectParameter("From_Year", from_Year) :
                new ObjectParameter("From_Year", typeof(int));
    
            var to_YearParameter = to_Year.HasValue ?
                new ObjectParameter("To_Year", to_Year) :
                new ObjectParameter("To_Year", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Education_Insert", fK_SchoolParameter, degreeParameter, fieldOfStudyParameter, gradeParameter, activitiesParameter, from_YearParameter, to_YearParameter, descriptionParameter, fK_MemberParameter);
        }
    
        public virtual int Education_Update(Nullable<int> iD, Nullable<int> fK_School, string degree, string fieldOfStudy, string grade, string activities, Nullable<int> from_Year, Nullable<int> to_Year, string description, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_SchoolParameter = fK_School.HasValue ?
                new ObjectParameter("FK_School", fK_School) :
                new ObjectParameter("FK_School", typeof(int));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var fieldOfStudyParameter = fieldOfStudy != null ?
                new ObjectParameter("FieldOfStudy", fieldOfStudy) :
                new ObjectParameter("FieldOfStudy", typeof(string));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            var activitiesParameter = activities != null ?
                new ObjectParameter("Activities", activities) :
                new ObjectParameter("Activities", typeof(string));
    
            var from_YearParameter = from_Year.HasValue ?
                new ObjectParameter("From_Year", from_Year) :
                new ObjectParameter("From_Year", typeof(int));
    
            var to_YearParameter = to_Year.HasValue ?
                new ObjectParameter("To_Year", to_Year) :
                new ObjectParameter("To_Year", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Education_Update", iDParameter, fK_SchoolParameter, degreeParameter, fieldOfStudyParameter, gradeParameter, activitiesParameter, from_YearParameter, to_YearParameter, descriptionParameter, fK_MemberParameter);
        }
    
        public virtual int Group_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Group_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Group_GetAll_Result> Group_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group_GetAll_Result>("Group_GetAll");
        }
    
        public virtual ObjectResult<Group_GetByID_Result> Group_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group_GetByID_Result>("Group_GetByID", iDParameter);
        }
    
        public virtual int Group_Insert(string name, string description, Nullable<System.DateTime> data_Start, Nullable<System.Guid> fK_Create_Member, Nullable<bool> isDeleted)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var data_StartParameter = data_Start.HasValue ?
                new ObjectParameter("Data_Start", data_Start) :
                new ObjectParameter("Data_Start", typeof(System.DateTime));
    
            var fK_Create_MemberParameter = fK_Create_Member.HasValue ?
                new ObjectParameter("FK_Create_Member", fK_Create_Member) :
                new ObjectParameter("FK_Create_Member", typeof(System.Guid));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Group_Insert", nameParameter, descriptionParameter, data_StartParameter, fK_Create_MemberParameter, isDeletedParameter);
        }
    
        public virtual int Group_Update(Nullable<int> iD, string name, string description, Nullable<System.DateTime> data_Start, Nullable<System.Guid> fK_Create_Member, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var data_StartParameter = data_Start.HasValue ?
                new ObjectParameter("Data_Start", data_Start) :
                new ObjectParameter("Data_Start", typeof(System.DateTime));
    
            var fK_Create_MemberParameter = fK_Create_Member.HasValue ?
                new ObjectParameter("FK_Create_Member", fK_Create_Member) :
                new ObjectParameter("FK_Create_Member", typeof(System.Guid));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Group_Update", iDParameter, nameParameter, descriptionParameter, data_StartParameter, fK_Create_MemberParameter, isDeletedParameter);
        }
    
        public virtual int Industry_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Industry_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Industry_GetAll_Result> Industry_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Industry_GetAll_Result>("Industry_GetAll");
        }
    
        public virtual ObjectResult<Industry_GetByID_Result> Industry_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Industry_GetByID_Result>("Industry_GetByID", iDParameter);
        }
    
        public virtual int Industry_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Industry_Insert", nameParameter);
        }
    
        public virtual int Industry_Update(Nullable<int> iD, string name)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Industry_Update", iDParameter, nameParameter);
        }
    
        public virtual int Langauge_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Langauge_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Langauge_GetAll_Result> Langauge_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Langauge_GetAll_Result>("Langauge_GetAll");
        }
    
        public virtual ObjectResult<Langauge_GetByID_Result> Langauge_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Langauge_GetByID_Result>("Langauge_GetByID", iDParameter);
        }
    
        public virtual int Langauge_Insert(string name, string lang_Level, Nullable<System.Guid> fK_Member)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lang_LevelParameter = lang_Level != null ?
                new ObjectParameter("Lang_Level", lang_Level) :
                new ObjectParameter("Lang_Level", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Langauge_Insert", nameParameter, lang_LevelParameter, fK_MemberParameter);
        }
    
        public virtual int Langauge_Update(Nullable<int> iD, string name, string lang_Level, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lang_LevelParameter = lang_Level != null ?
                new ObjectParameter("Lang_Level", lang_Level) :
                new ObjectParameter("Lang_Level", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Langauge_Update", iDParameter, nameParameter, lang_LevelParameter, fK_MemberParameter);
        }
    
        public virtual int Like_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Like_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Like_GetAll_Result> Like_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Like_GetAll_Result>("Like_GetAll");
        }
    
        public virtual ObjectResult<Like_GetByID_Result> Like_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Like_GetByID_Result>("Like_GetByID", iDParameter);
        }
    
        public virtual int Like_Insert(Nullable<int> fK_Post, Nullable<System.Guid> fK_Member)
        {
            var fK_PostParameter = fK_Post.HasValue ?
                new ObjectParameter("FK_Post", fK_Post) :
                new ObjectParameter("FK_Post", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Like_Insert", fK_PostParameter, fK_MemberParameter);
        }
    
        public virtual int Like_Update(Nullable<int> iD, Nullable<int> fK_Post, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_PostParameter = fK_Post.HasValue ?
                new ObjectParameter("FK_Post", fK_Post) :
                new ObjectParameter("FK_Post", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Like_Update", iDParameter, fK_PostParameter, fK_MemberParameter);
        }
    
        public virtual int Links_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Links_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Links_GetAll_Result> Links_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Links_GetAll_Result>("Links_GetAll");
        }
    
        public virtual ObjectResult<Links_GetByID_Result> Links_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Links_GetByID_Result>("Links_GetByID", iDParameter);
        }
    
        public virtual int Links_Insert(Nullable<int> fK_Member_Section, string name, string description, string uRL)
        {
            var fK_Member_SectionParameter = fK_Member_Section.HasValue ?
                new ObjectParameter("FK_Member_Section", fK_Member_Section) :
                new ObjectParameter("FK_Member_Section", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Links_Insert", fK_Member_SectionParameter, nameParameter, descriptionParameter, uRLParameter);
        }
    
        public virtual int Links_Update(Nullable<int> iD, Nullable<int> fK_Member_Section, string name, string description, string uRL)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_Member_SectionParameter = fK_Member_Section.HasValue ?
                new ObjectParameter("FK_Member_Section", fK_Member_Section) :
                new ObjectParameter("FK_Member_Section", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Links_Update", iDParameter, fK_Member_SectionParameter, nameParameter, descriptionParameter, uRLParameter);
        }
    
        public virtual int Member_Connection_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Connection_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Member_Connection_GetAll_Result> Member_Connection_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_Connection_GetAll_Result>("Member_Connection_GetAll");
        }
    
        public virtual ObjectResult<Member_Connection_GetByID_Result> Member_Connection_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_Connection_GetByID_Result>("Member_Connection_GetByID", iDParameter);
        }
    
        public virtual int Member_Connection_Insert(Nullable<System.Guid> fK_Member, Nullable<System.Guid> fK_Connect_Member, Nullable<System.DateTime> date_Start, Nullable<bool> isDeleted)
        {
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            var fK_Connect_MemberParameter = fK_Connect_Member.HasValue ?
                new ObjectParameter("FK_Connect_Member", fK_Connect_Member) :
                new ObjectParameter("FK_Connect_Member", typeof(System.Guid));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Connection_Insert", fK_MemberParameter, fK_Connect_MemberParameter, date_StartParameter, isDeletedParameter);
        }
    
        public virtual int Member_Connection_Update(Nullable<int> iD, Nullable<System.Guid> fK_Member, Nullable<System.Guid> fK_Connect_Member, Nullable<System.DateTime> date_Start, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            var fK_Connect_MemberParameter = fK_Connect_Member.HasValue ?
                new ObjectParameter("FK_Connect_Member", fK_Connect_Member) :
                new ObjectParameter("FK_Connect_Member", typeof(System.Guid));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Connection_Update", iDParameter, fK_MemberParameter, fK_Connect_MemberParameter, date_StartParameter, isDeletedParameter);
        }
    
        public virtual int Member_Delete(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Member_GetAll_Result> Member_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_GetAll_Result>("Member_GetAll");
        }
    
        public virtual ObjectResult<Member_GetByID_Result> Member_GetByID(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_GetByID_Result>("Member_GetByID", iDParameter);
        }
    
        public virtual int Member_Group_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Group_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Member_Group_GetAll_Result> Member_Group_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_Group_GetAll_Result>("Member_Group_GetAll");
        }
    
        public virtual ObjectResult<Member_Group_GetByID_Result> Member_Group_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member_Group_GetByID_Result>("Member_Group_GetByID", iDParameter);
        }
    
        public virtual int Member_Group_Insert(Nullable<System.Guid> fK_Member, Nullable<int> fK_Group, Nullable<System.DateTime> date_Join, Nullable<bool> isDeleted)
        {
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            var fK_GroupParameter = fK_Group.HasValue ?
                new ObjectParameter("FK_Group", fK_Group) :
                new ObjectParameter("FK_Group", typeof(int));
    
            var date_JoinParameter = date_Join.HasValue ?
                new ObjectParameter("Date_Join", date_Join) :
                new ObjectParameter("Date_Join", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Group_Insert", fK_MemberParameter, fK_GroupParameter, date_JoinParameter, isDeletedParameter);
        }
    
        public virtual int Member_Group_Update(Nullable<int> iD, Nullable<System.Guid> fK_Member, Nullable<int> fK_Group, Nullable<System.DateTime> date_Join, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            var fK_GroupParameter = fK_Group.HasValue ?
                new ObjectParameter("FK_Group", fK_Group) :
                new ObjectParameter("FK_Group", typeof(int));
    
            var date_JoinParameter = date_Join.HasValue ?
                new ObjectParameter("Date_Join", date_Join) :
                new ObjectParameter("Date_Join", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Group_Update", iDParameter, fK_MemberParameter, fK_GroupParameter, date_JoinParameter, isDeletedParameter);
        }
    
        public virtual int Member_Insert(Nullable<System.Guid> iD, string fisrt_Name, string middle_Name, string last_Name, string mail, string headLine, string summary, string gender, string profile_Img, string cover_Img, Nullable<System.DateTime> date_Of_Birth, Nullable<System.DateTime> date_Joined, Nullable<int> zip_Code, Nullable<int> fK_Country, string profile_URL, Nullable<int> fK_Industry, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var fisrt_NameParameter = fisrt_Name != null ?
                new ObjectParameter("Fisrt_Name", fisrt_Name) :
                new ObjectParameter("Fisrt_Name", typeof(string));
    
            var middle_NameParameter = middle_Name != null ?
                new ObjectParameter("Middle_Name", middle_Name) :
                new ObjectParameter("Middle_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var headLineParameter = headLine != null ?
                new ObjectParameter("HeadLine", headLine) :
                new ObjectParameter("HeadLine", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var profile_ImgParameter = profile_Img != null ?
                new ObjectParameter("Profile_Img", profile_Img) :
                new ObjectParameter("Profile_Img", typeof(string));
    
            var cover_ImgParameter = cover_Img != null ?
                new ObjectParameter("Cover_Img", cover_Img) :
                new ObjectParameter("Cover_Img", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var date_JoinedParameter = date_Joined.HasValue ?
                new ObjectParameter("Date_Joined", date_Joined) :
                new ObjectParameter("Date_Joined", typeof(System.DateTime));
    
            var zip_CodeParameter = zip_Code.HasValue ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(int));
    
            var fK_CountryParameter = fK_Country.HasValue ?
                new ObjectParameter("FK_Country", fK_Country) :
                new ObjectParameter("FK_Country", typeof(int));
    
            var profile_URLParameter = profile_URL != null ?
                new ObjectParameter("Profile_URL", profile_URL) :
                new ObjectParameter("Profile_URL", typeof(string));
    
            var fK_IndustryParameter = fK_Industry.HasValue ?
                new ObjectParameter("FK_Industry", fK_Industry) :
                new ObjectParameter("FK_Industry", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Insert", iDParameter, fisrt_NameParameter, middle_NameParameter, last_NameParameter, mailParameter, headLineParameter, summaryParameter, genderParameter, profile_ImgParameter, cover_ImgParameter, date_Of_BirthParameter, date_JoinedParameter, zip_CodeParameter, fK_CountryParameter, profile_URLParameter, fK_IndustryParameter, isDeletedParameter);
        }
    
        public virtual int Member_Update(Nullable<System.Guid> iD, string fisrt_Name, string middle_Name, string last_Name, string mail, string headLine, string summary, string gender, string profile_Img, string cover_Img, Nullable<System.DateTime> date_Of_Birth, Nullable<System.DateTime> date_Joined, Nullable<int> zip_Code, Nullable<int> fK_Country, string profile_URL, Nullable<int> fK_Industry, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var fisrt_NameParameter = fisrt_Name != null ?
                new ObjectParameter("Fisrt_Name", fisrt_Name) :
                new ObjectParameter("Fisrt_Name", typeof(string));
    
            var middle_NameParameter = middle_Name != null ?
                new ObjectParameter("Middle_Name", middle_Name) :
                new ObjectParameter("Middle_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var headLineParameter = headLine != null ?
                new ObjectParameter("HeadLine", headLine) :
                new ObjectParameter("HeadLine", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var profile_ImgParameter = profile_Img != null ?
                new ObjectParameter("Profile_Img", profile_Img) :
                new ObjectParameter("Profile_Img", typeof(string));
    
            var cover_ImgParameter = cover_Img != null ?
                new ObjectParameter("Cover_Img", cover_Img) :
                new ObjectParameter("Cover_Img", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var date_JoinedParameter = date_Joined.HasValue ?
                new ObjectParameter("Date_Joined", date_Joined) :
                new ObjectParameter("Date_Joined", typeof(System.DateTime));
    
            var zip_CodeParameter = zip_Code.HasValue ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(int));
    
            var fK_CountryParameter = fK_Country.HasValue ?
                new ObjectParameter("FK_Country", fK_Country) :
                new ObjectParameter("FK_Country", typeof(int));
    
            var profile_URLParameter = profile_URL != null ?
                new ObjectParameter("Profile_URL", profile_URL) :
                new ObjectParameter("Profile_URL", typeof(string));
    
            var fK_IndustryParameter = fK_Industry.HasValue ?
                new ObjectParameter("FK_Industry", fK_Industry) :
                new ObjectParameter("FK_Industry", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Member_Update", iDParameter, fisrt_NameParameter, middle_NameParameter, last_NameParameter, mailParameter, headLineParameter, summaryParameter, genderParameter, profile_ImgParameter, cover_ImgParameter, date_Of_BirthParameter, date_JoinedParameter, zip_CodeParameter, fK_CountryParameter, profile_URLParameter, fK_IndustryParameter, isDeletedParameter);
        }
    
        public virtual int Organization_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Delete", iDParameter);
        }
    
        public virtual int Organization_Follower_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Follower_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Organization_Follower_GetAll_Result> Organization_Follower_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organization_Follower_GetAll_Result>("Organization_Follower_GetAll");
        }
    
        public virtual ObjectResult<Organization_Follower_GetByID_Result> Organization_Follower_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organization_Follower_GetByID_Result>("Organization_Follower_GetByID", iDParameter);
        }
    
        public virtual int Organization_Follower_Insert(Nullable<int> fK_Organization, Nullable<System.Guid> fK_Member)
        {
            var fK_OrganizationParameter = fK_Organization.HasValue ?
                new ObjectParameter("FK_Organization", fK_Organization) :
                new ObjectParameter("FK_Organization", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Follower_Insert", fK_OrganizationParameter, fK_MemberParameter);
        }
    
        public virtual int Organization_Follower_Update(Nullable<int> iD, Nullable<int> fK_Organization, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_OrganizationParameter = fK_Organization.HasValue ?
                new ObjectParameter("FK_Organization", fK_Organization) :
                new ObjectParameter("FK_Organization", typeof(int));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Follower_Update", iDParameter, fK_OrganizationParameter, fK_MemberParameter);
        }
    
        public virtual ObjectResult<Organization_GetAll_Result> Organization_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organization_GetAll_Result>("Organization_GetAll");
        }
    
        public virtual ObjectResult<Organization_GetByID_Result> Organization_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organization_GetByID_Result>("Organization_GetByID", iDParameter);
        }
    
        public virtual int Organization_Insert(string title, string aboutUs, string logo_Img, string cover_Img, string location, Nullable<int> fK_Org_Size, string site_URL, Nullable<System.DateTime> date_Start, Nullable<int> fK_Industry, Nullable<bool> isDeleted)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var aboutUsParameter = aboutUs != null ?
                new ObjectParameter("AboutUs", aboutUs) :
                new ObjectParameter("AboutUs", typeof(string));
    
            var logo_ImgParameter = logo_Img != null ?
                new ObjectParameter("Logo_Img", logo_Img) :
                new ObjectParameter("Logo_Img", typeof(string));
    
            var cover_ImgParameter = cover_Img != null ?
                new ObjectParameter("Cover_Img", cover_Img) :
                new ObjectParameter("Cover_Img", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var fK_Org_SizeParameter = fK_Org_Size.HasValue ?
                new ObjectParameter("FK_Org_Size", fK_Org_Size) :
                new ObjectParameter("FK_Org_Size", typeof(int));
    
            var site_URLParameter = site_URL != null ?
                new ObjectParameter("Site_URL", site_URL) :
                new ObjectParameter("Site_URL", typeof(string));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var fK_IndustryParameter = fK_Industry.HasValue ?
                new ObjectParameter("FK_Industry", fK_Industry) :
                new ObjectParameter("FK_Industry", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Insert", titleParameter, aboutUsParameter, logo_ImgParameter, cover_ImgParameter, locationParameter, fK_Org_SizeParameter, site_URLParameter, date_StartParameter, fK_IndustryParameter, isDeletedParameter);
        }
    
        public virtual int Organization_Size_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Size_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Organization_Size_GetAll_Result> Organization_Size_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organization_Size_GetAll_Result>("Organization_Size_GetAll");
        }
    
        public virtual ObjectResult<Organization_Size_GetByID_Result> Organization_Size_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organization_Size_GetByID_Result>("Organization_Size_GetByID", iDParameter);
        }
    
        public virtual int Organization_Size_Insert(string name, string description)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Size_Insert", nameParameter, descriptionParameter);
        }
    
        public virtual int Organization_Size_Update(Nullable<int> iD, string name, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Size_Update", iDParameter, nameParameter, descriptionParameter);
        }
    
        public virtual int Organization_Update(Nullable<int> iD, string title, string aboutUs, string logo_Img, string cover_Img, string location, Nullable<int> fK_Org_Size, string site_URL, Nullable<System.DateTime> date_Start, Nullable<int> fK_Industry, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var aboutUsParameter = aboutUs != null ?
                new ObjectParameter("AboutUs", aboutUs) :
                new ObjectParameter("AboutUs", typeof(string));
    
            var logo_ImgParameter = logo_Img != null ?
                new ObjectParameter("Logo_Img", logo_Img) :
                new ObjectParameter("Logo_Img", typeof(string));
    
            var cover_ImgParameter = cover_Img != null ?
                new ObjectParameter("Cover_Img", cover_Img) :
                new ObjectParameter("Cover_Img", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var fK_Org_SizeParameter = fK_Org_Size.HasValue ?
                new ObjectParameter("FK_Org_Size", fK_Org_Size) :
                new ObjectParameter("FK_Org_Size", typeof(int));
    
            var site_URLParameter = site_URL != null ?
                new ObjectParameter("Site_URL", site_URL) :
                new ObjectParameter("Site_URL", typeof(string));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var fK_IndustryParameter = fK_Industry.HasValue ?
                new ObjectParameter("FK_Industry", fK_Industry) :
                new ObjectParameter("FK_Industry", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Organization_Update", iDParameter, titleParameter, aboutUsParameter, logo_ImgParameter, cover_ImgParameter, locationParameter, fK_Org_SizeParameter, site_URLParameter, date_StartParameter, fK_IndustryParameter, isDeletedParameter);
        }
    
        public virtual int Posts_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Posts_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Posts_GetAll_Result> Posts_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posts_GetAll_Result>("Posts_GetAll");
        }
    
        public virtual ObjectResult<Posts_GetByID_Result> Posts_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posts_GetByID_Result>("Posts_GetByID", iDParameter);
        }
    
        public virtual int Posts_Insert(string content, Nullable<System.Guid> fK_Member)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Posts_Insert", contentParameter, fK_MemberParameter);
        }
    
        public virtual int Posts_Update(Nullable<int> iD, string content, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Posts_Update", iDParameter, contentParameter, fK_MemberParameter);
        }
    
        public virtual int School_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("School_Delete", iDParameter);
        }
    
        public virtual ObjectResult<School_GetAll_Result> School_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<School_GetAll_Result>("School_GetAll");
        }
    
        public virtual ObjectResult<School_GetByID_Result> School_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<School_GetByID_Result>("School_GetByID", iDParameter);
        }
    
        public virtual int School_Insert(string name, string description, string logo_Img, string cover_Image, string site_Url, Nullable<System.DateTime> date_Start, Nullable<bool> isDeleted)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var logo_ImgParameter = logo_Img != null ?
                new ObjectParameter("Logo_Img", logo_Img) :
                new ObjectParameter("Logo_Img", typeof(string));
    
            var cover_ImageParameter = cover_Image != null ?
                new ObjectParameter("Cover_Image", cover_Image) :
                new ObjectParameter("Cover_Image", typeof(string));
    
            var site_UrlParameter = site_Url != null ?
                new ObjectParameter("Site_Url", site_Url) :
                new ObjectParameter("Site_Url", typeof(string));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("School_Insert", nameParameter, descriptionParameter, logo_ImgParameter, cover_ImageParameter, site_UrlParameter, date_StartParameter, isDeletedParameter);
        }
    
        public virtual int School_Update(Nullable<int> iD, string name, string description, string logo_Img, string cover_Image, string site_Url, Nullable<System.DateTime> date_Start, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var logo_ImgParameter = logo_Img != null ?
                new ObjectParameter("Logo_Img", logo_Img) :
                new ObjectParameter("Logo_Img", typeof(string));
    
            var cover_ImageParameter = cover_Image != null ?
                new ObjectParameter("Cover_Image", cover_Image) :
                new ObjectParameter("Cover_Image", typeof(string));
    
            var site_UrlParameter = site_Url != null ?
                new ObjectParameter("Site_Url", site_Url) :
                new ObjectParameter("Site_Url", typeof(string));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("School_Update", iDParameter, nameParameter, descriptionParameter, logo_ImgParameter, cover_ImageParameter, site_UrlParameter, date_StartParameter, isDeletedParameter);
        }
    
        public virtual int Skills_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Skills_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Skills_GetAll_Result> Skills_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Skills_GetAll_Result>("Skills_GetAll");
        }
    
        public virtual ObjectResult<Skills_GetByID_Result> Skills_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Skills_GetByID_Result>("Skills_GetByID", iDParameter);
        }
    
        public virtual int Skills_Insert(string name, Nullable<System.Guid> fK_Member)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Skills_Insert", nameParameter, fK_MemberParameter);
        }
    
        public virtual int Skills_Update(Nullable<int> iD, string name, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Skills_Update", iDParameter, nameParameter, fK_MemberParameter);
        }
    
        public virtual int Upload_Media_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upload_Media_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Upload_Media_GetAll_Result> Upload_Media_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Upload_Media_GetAll_Result>("Upload_Media_GetAll");
        }
    
        public virtual ObjectResult<Upload_Media_GetByID_Result> Upload_Media_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Upload_Media_GetByID_Result>("Upload_Media_GetByID", iDParameter);
        }
    
        public virtual int Upload_Media_Insert(Nullable<int> fK_Member_Section, string name, string description, string uRL)
        {
            var fK_Member_SectionParameter = fK_Member_Section.HasValue ?
                new ObjectParameter("FK_Member_Section", fK_Member_Section) :
                new ObjectParameter("FK_Member_Section", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upload_Media_Insert", fK_Member_SectionParameter, nameParameter, descriptionParameter, uRLParameter);
        }
    
        public virtual int Upload_Media_Update(Nullable<int> iD, Nullable<int> fK_Member_Section, string name, string description, string uRL)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_Member_SectionParameter = fK_Member_Section.HasValue ?
                new ObjectParameter("FK_Member_Section", fK_Member_Section) :
                new ObjectParameter("FK_Member_Section", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upload_Media_Update", iDParameter, fK_Member_SectionParameter, nameParameter, descriptionParameter, uRLParameter);
        }
    
        public virtual int Volunteer_Experience_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Volunteer_Experience_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Volunteer_Experience_GetAll_Result> Volunteer_Experience_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Volunteer_Experience_GetAll_Result>("Volunteer_Experience_GetAll");
        }
    
        public virtual ObjectResult<Volunteer_Experience_GetByID_Result> Volunteer_Experience_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Volunteer_Experience_GetByID_Result>("Volunteer_Experience_GetByID", iDParameter);
        }
    
        public virtual int Volunteer_Experience_Insert(Nullable<int> fK_Org, string role, string cause, Nullable<int> start_Year, Nullable<int> start_Month, Nullable<int> end_Year, Nullable<int> end_Month, string description, Nullable<System.Guid> fK_Member)
        {
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var causeParameter = cause != null ?
                new ObjectParameter("Cause", cause) :
                new ObjectParameter("Cause", typeof(string));
    
            var start_YearParameter = start_Year.HasValue ?
                new ObjectParameter("Start_Year", start_Year) :
                new ObjectParameter("Start_Year", typeof(int));
    
            var start_MonthParameter = start_Month.HasValue ?
                new ObjectParameter("Start_Month", start_Month) :
                new ObjectParameter("Start_Month", typeof(int));
    
            var end_YearParameter = end_Year.HasValue ?
                new ObjectParameter("End_Year", end_Year) :
                new ObjectParameter("End_Year", typeof(int));
    
            var end_MonthParameter = end_Month.HasValue ?
                new ObjectParameter("End_Month", end_Month) :
                new ObjectParameter("End_Month", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Volunteer_Experience_Insert", fK_OrgParameter, roleParameter, causeParameter, start_YearParameter, start_MonthParameter, end_YearParameter, end_MonthParameter, descriptionParameter, fK_MemberParameter);
        }
    
        public virtual int Volunteer_Experience_Update(Nullable<int> iD, Nullable<int> fK_Org, string role, string cause, Nullable<int> start_Year, Nullable<int> start_Month, Nullable<int> end_Year, Nullable<int> end_Month, string description, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var causeParameter = cause != null ?
                new ObjectParameter("Cause", cause) :
                new ObjectParameter("Cause", typeof(string));
    
            var start_YearParameter = start_Year.HasValue ?
                new ObjectParameter("Start_Year", start_Year) :
                new ObjectParameter("Start_Year", typeof(int));
    
            var start_MonthParameter = start_Month.HasValue ?
                new ObjectParameter("Start_Month", start_Month) :
                new ObjectParameter("Start_Month", typeof(int));
    
            var end_YearParameter = end_Year.HasValue ?
                new ObjectParameter("End_Year", end_Year) :
                new ObjectParameter("End_Year", typeof(int));
    
            var end_MonthParameter = end_Month.HasValue ?
                new ObjectParameter("End_Month", end_Month) :
                new ObjectParameter("End_Month", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Volunteer_Experience_Update", iDParameter, fK_OrgParameter, roleParameter, causeParameter, start_YearParameter, start_MonthParameter, end_YearParameter, end_MonthParameter, descriptionParameter, fK_MemberParameter);
        }
    
        public virtual int Work_Experience_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Work_Experience_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Work_Experience_GetAll_Result> Work_Experience_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Work_Experience_GetAll_Result>("Work_Experience_GetAll");
        }
    
        public virtual ObjectResult<Work_Experience_GetByID_Result> Work_Experience_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Work_Experience_GetByID_Result>("Work_Experience_GetByID", iDParameter);
        }
    
        public virtual int Work_Experience_Insert(string jop_Title, Nullable<int> fK_Org, string location, Nullable<int> from_Year, Nullable<int> from_Month, Nullable<int> to_Year, Nullable<int> to_Month, string description, Nullable<System.Guid> fK_Member)
        {
            var jop_TitleParameter = jop_Title != null ?
                new ObjectParameter("Jop_Title", jop_Title) :
                new ObjectParameter("Jop_Title", typeof(string));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var from_YearParameter = from_Year.HasValue ?
                new ObjectParameter("From_Year", from_Year) :
                new ObjectParameter("From_Year", typeof(int));
    
            var from_MonthParameter = from_Month.HasValue ?
                new ObjectParameter("From_Month", from_Month) :
                new ObjectParameter("From_Month", typeof(int));
    
            var to_YearParameter = to_Year.HasValue ?
                new ObjectParameter("To_Year", to_Year) :
                new ObjectParameter("To_Year", typeof(int));
    
            var to_MonthParameter = to_Month.HasValue ?
                new ObjectParameter("To_Month", to_Month) :
                new ObjectParameter("To_Month", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Work_Experience_Insert", jop_TitleParameter, fK_OrgParameter, locationParameter, from_YearParameter, from_MonthParameter, to_YearParameter, to_MonthParameter, descriptionParameter, fK_MemberParameter);
        }
    
        public virtual int Work_Experience_Update(Nullable<int> iD, string jop_Title, Nullable<int> fK_Org, string location, Nullable<int> from_Year, Nullable<int> from_Month, Nullable<int> to_Year, Nullable<int> to_Month, string description, Nullable<System.Guid> fK_Member)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var jop_TitleParameter = jop_Title != null ?
                new ObjectParameter("Jop_Title", jop_Title) :
                new ObjectParameter("Jop_Title", typeof(string));
    
            var fK_OrgParameter = fK_Org.HasValue ?
                new ObjectParameter("FK_Org", fK_Org) :
                new ObjectParameter("FK_Org", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var from_YearParameter = from_Year.HasValue ?
                new ObjectParameter("From_Year", from_Year) :
                new ObjectParameter("From_Year", typeof(int));
    
            var from_MonthParameter = from_Month.HasValue ?
                new ObjectParameter("From_Month", from_Month) :
                new ObjectParameter("From_Month", typeof(int));
    
            var to_YearParameter = to_Year.HasValue ?
                new ObjectParameter("To_Year", to_Year) :
                new ObjectParameter("To_Year", typeof(int));
    
            var to_MonthParameter = to_Month.HasValue ?
                new ObjectParameter("To_Month", to_Month) :
                new ObjectParameter("To_Month", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fK_MemberParameter = fK_Member.HasValue ?
                new ObjectParameter("FK_Member", fK_Member) :
                new ObjectParameter("FK_Member", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Work_Experience_Update", iDParameter, jop_TitleParameter, fK_OrgParameter, locationParameter, from_YearParameter, from_MonthParameter, to_YearParameter, to_MonthParameter, descriptionParameter, fK_MemberParameter);
        }
    }
}
